dir exist

if [ -d"/home/manu/Desktop/script" ]
then
      echo "directory exists"
else
      echo "directory does not exist"
fi


sed

sed -i 's/hello/hai/g' script2


comparison

echo "enter n1"
read var1
echo "enter n2"
read var2
if [ $var2 -gt $var1 ]
then
echo "$var2 is greater than $var1"
fi



array

arr=(green pink yello red)
echo ${arr[@]}



display last updated file

ls -lrt | grep ^-|awk 'END{print $NF}'



reverse


n=$1
rev=0
sd=0
while [ $n -gt 0 ]
do
sd=`expr $n % 10`
rev=`expr $rev \* 10 + $sd`
n=`expr $n / 10`
done
echo "Reverse number is $rev"



unique words ina file


fibonacci

echo "enter the limit"
read n
a=0
b=1
echo "The Fibonacci series is : "
for ((i=0; i<n; i++ ))
do
echo "$a"
fn=$((a + b))
a=$b
b=$fn
done


prime

                             
echo "enter the number"
read n
f=0
for((i=2;i<=n/2;i++))
do
if [ $((n % i)) -eq 0  ]
then
echo "$n not prime"
f=1
break
fi
done
if [ $((f)) -eq 0 ]
then
echo "$n prime"
fi



last updated file
ls -lrt | grep ^- | awk 'END{print $NF}'

count occurence od word 
awk '{for(i=1;i<=NF;i++)a[$i]++;}END{for(i in a){print i,a[i];}}' animal

total count of the word
find . -name *.txt -exec grep -c Linux '{}' \; | awk '{x+=$0;}END{print x}'



# HOW TO FIND A NUMBER IS EVEN OR ODD IN SHELL SCRIPT
clear 
echo "---- EVEN OR ODD IN SHELL SCRIPT -----"
echo -n "Enter a number:"
read n
echo -n "RESULT: "
if [ `expr $n % 2` == 0 ]
then
	echo "$n is even"
else
	echo "$n is Odd"
fi


password


echo "Enter your password"
read password
len="${#password}"
if test $len -ge 8 ; then
	echo "$password" | grep -q [0-9]
	if test $? -eq 0 ; then
		echo "$password" | grep -q [A-Z]
		if test $? -eq 0 ; then
			echo "$password" | grep -q [a-z]
			if test $? -eq 0 ; then
				echo "Strong Password"
			else
				echo "Weak Password -> Should include a lower case letter."
			fi
		else
			echo "Weak Password -> Should include a capital case letter."
		fi
	else
		echo "Weak Password -> Should use numbers in your password."
	fi
else
	echo "Weak Password -> Password length should have at least 8 characters."
fi


factorial


echo "Enter a number"
read num

fact=1

while [ $num -gt 1 ]
do
  fact=$((fact * num))  #fact = fact * num
  num=$((num - 1))      #num = num - 1
done

echo $fact





----------------------------------------------
echo "enter the number"
read n
f=1
for((i=1;i<=n;i++))
do
f=$((f * i))
done
echo "fact:$f"











